version: "3.4"
services:

  identity:
    build:
      context: .
      dockerfile: ./src/Services/Identity.API/Dockerfile
    ports:
      - "5000:80"
    environment:
      - "ConnectionStrings:IdentityServerDb=Server=sqlserver;Database=Microservices.Services.IdentityServerDb;User Id=sa;Password=Pass_w0rd;Application Name=Identity.API"
    container_name: identity-api
    depends_on:
      - sqlserver

  resources:
    build:
      context: .
      dockerfile: ./src/Services/Resources.API/Dockerfile
    ports:
      - "5001:80"
    environment:
      - "Endpoints:Redis=redis:6379"
      - "Endpoints:RabbitMq=rabbitmq"
      - "Endpoints:IdentityServer=identity-api"
    container_name: resources-api
    depends_on:
      - rabbitmq
      - redis

  roster:
    build:
      context: .
      dockerfile: ./src/Services/Roster.API/Dockerfile
    ports:
      - "5002:80"
    environment:
      - "Endpoints:RabbitMq=rabbitmq"
    container_name: roster-api
    depends_on:
      - rabbitmq

  revenue:
    build:
      context: .
      dockerfile: ./src/Services/Revenue.API/Dockerfile
    ports:
      - "5003:80"
    environment:
      - "ConnectionStrings:SqlServerDb=Server=sqlserver;Database=Microservices.Services.RevenueDb;User Id=sa;Password=Pass_w0rd;Application Name=Revenue.API"
    container_name: revenue-api
    depends_on:
      - sqlserver

  redis:
    image: redis
    ports:
      - "32768:6379"
    container_name: redis

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 8080:15672
      - 5672:5672
    container_name: rabbitmq
  
  sqlserver:
    image: microsoft/mssql-server-linux:2017-latest
    environment:
      - MSSQL_SA_PASSWORD=Pass_w0rd
      - ACCEPT_EULA=Y
      - MSSQL_PID=Developer
    ports:
      - "1401:1433"
    container_name: sqlserver