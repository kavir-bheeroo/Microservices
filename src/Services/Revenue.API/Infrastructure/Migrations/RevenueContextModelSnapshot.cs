// <auto-generated />
using Microservices.Services.Revenue.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Revenue.API.Migrations
{
    [DbContext(typeof(RevenueContext))]
    partial class RevenueContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("Relational:Sequence:Revenue.TripSeq", "'TripSeq', 'Revenue', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microservices.Services.Revenue.Domain.AggregatesModel.TripAggregate.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "TripSeq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "Revenue")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<Guid>("BusId");

                    b.Property<Guid>("ConductorId");

                    b.Property<Guid>("DriverId");

                    b.Property<decimal>("TotalRevenue");

                    b.Property<int>("TotalTrips");

                    b.Property<DateTime>("TripDate");

                    b.HasKey("Id");

                    b.ToTable("Trips","Revenue");
                });

            modelBuilder.Entity("Microservices.Services.Revenue.Domain.AggregatesModel.TripAggregate.TripLeg", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Revenue");

                    b.Property<string>("Route");

                    b.Property<int?>("TripId");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripLegs","Revenue");
                });

            modelBuilder.Entity("Microservices.Services.Revenue.Domain.AggregatesModel.TripAggregate.TripLeg", b =>
                {
                    b.HasOne("Microservices.Services.Revenue.Domain.AggregatesModel.TripAggregate.Trip")
                        .WithMany("TripLegs")
                        .HasForeignKey("TripId");
                });
#pragma warning restore 612, 618
        }
    }
}
